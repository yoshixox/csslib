'use strict';
module.exports = {
  // Treat attributes in case sensitive manner (useful for custom HTML tags)
  // caseSensitive                : false,

  // Omit attribute values from boolean attributes
  // collapseBooleanAttributes    : false,

  // Don't leave any spaces between display:inline; elements when collapsing.
  // Must be used in conjunction with collapseWhitespace=true
  // collapseInlineTagWhitespace  : false,
  collapseInlineTagWhitespace: true,

  // Collapse white space that contributes to text nodes in a document tree
  // collapseWhitespace           : false,
  collapseWhitespace: true,

  // Always collapse to 1 space (never remove it entirely). Must be used in
  // conjunction with collapseWhitespace=true
  // conservativeCollapse         : false,

  // Arrays of regex'es that allow to support custom attribute assign
  // expressions (e.g. '<div flex?=""{{mode != cover}}""></div>')
  // customAttrAssign             : [],

  // Regex that specifies custom attribute to strip newlines from (e.g.
  // /ng-class/)
  // customAttrCollapse           : '',

  // Arrays of regex'es that allow to support custom attribute surround
  // expressions (e.g. <input {{#if value}}checked=""checked""{{/if}}>)
  // customAttrSurround           : [],

  // Arrays of regex'es that allow to support custom event attributes for
  // minifyJS (e.g. ng-click)
  // customEventAttributes        : [/^on[a-z]{3,}$/],

  // Use direct Unicode characters whenever possible
  // decodeEntities               : false,

  // Parse input according to HTML5 specifications
  // html5                        : true,

  // Array of regex'es that allow to ignore certain comments, when matched
  // ignoreCustomComments         : [/^!/],

  // Array of regex'es that allow to ignore certain fragments, when matched
  // (e.g. <?php ... ?>, {{ ... }}, etc.)
  // ignoreCustomFragments        : [/<%[\s\S]*?%>/, /<\?[\s\S]*?\?>/],

  // Insert tags generated by HTML parser
  // includeAutoGeneratedTags     : true,

  // Keep the trailing slash on singleton elements
  // keepClosingSlash             : false,

  // Specify a maximum line length. Compressed output will be split by newlines
  // at valid HTML split-points
  // maxLineLength                : '',

  // Minify CSS in style elements and style attributes (uses clean-css).
  // advanced optimisations are disabled by default(could be true, Object,
  // Function(text))
  // minifyCSS                    : false,
  minifyCSS         : true,
  // Minify JavaScript in script elements and event attributes (uses UglifyJS)
  // (could be true, Object, Function(text, inline))
  // minifyJS                     : false,
  minifyJS          : true,
  // Minify URLs in various attributes (uses relateurl) (could be String,
  // Object, Function(text))
  // minifyURLs                   : false,
  minifyURLs        : true,
  // Always collapse to 1 line break (never remove it entirely) when whitespace
  // between tags include a line break. Must be used in conjunction with
  // collapseWhitespace=true
  // preserveLineBreaks           : false,
  preserveLineBreaks: true,

  // Prevents the escaping of the values of attributes
  // preventAttributesEscaping    : false,

  // Process contents of conditional comments through minifier
  // processConditionalComments   : false,
  processConditionalComments: true,

  // Array of strings corresponding to types of script elements to process
  // through minifier (e.g. text/ng-template, text/x-handlebars-template, etc.)
  // processScripts               : [],

  // Type of quote to use for attribute values (' or "")
  // quoteCharacter               : '',

  // Remove quotes around attributes when possible
  // removeAttributeQuotes        : false,

  // Strip HTML comments
  // removeComments               : false,

  // Remove all attributes with whitespace-only values (could be true,
  // Function(attrName, tag))
  // removeEmptyAttributes        : false,

  // Remove all elements with empty contents
  // removeEmptyElements          : false,

  // Remove optional tags
  // removeOptionalTags           : false,

  // Remove attributes when value matches default.
  // removeRedundantAttributes    : false,

  // Remove type=""text/javascript"" from script tags. Other type attribute
  // values are left intact
  // removeScriptTypeAttributes   : false,

  // Remove type=""text/css"" from style and link tags. Other type attribute
  // values are left intact
  // removeStyleLinkTypeAttributes: false,

  // Remove space between attributes whenever possible. Note that this will
  // result in invalid HTML!
  // removeTagWhitespace          : false,

  // Sort attributes by frequency
  // sortAttributes               : false,
  sortAttributes: true,

  // Sort style classes by frequency
  // sortClassName                : false,

  // Trim white space around ignoreCustomFragments.
  // trimCustomFragments          : false,

  // Replaces the doctype with the short (HTML5) doctype
  // useShortDoctype              : false

};